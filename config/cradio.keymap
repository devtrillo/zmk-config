// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Home row mods macro

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <285>;
};

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <0 10>;
            layers = <0 2>;
        };

        right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <1 11>;
            layers = <0 2>;
        };

        double_quotes {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <2 12>;
            layers = <0 2>;
        };

        single_quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <3 13>;
            layers = <0 2>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <4 14>;
            layers = <0 2>;
        };

        colon {
            bindings = <&kp COLON>;
            key-positions = <5 15>;
            layers = <0 2>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <6 16>;
            layers = <0 2>;
        };

        equal {
            bindings = <&kp PLUS>;
            key-positions = <7 17>;
            layers = <0 2>;
        };

        left_parentesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <8 18>;
            layers = <0 2>;
        };

        right_parentesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <9 19>;
            layers = <0 2>;
        };

        less_than {
            bindings = <&kp LESS_THAN>;
            key-positions = <10 20>;
            layers = <0 2>;
        };

        greater_than {
            bindings = <&kp GREATER_THAN>;
            key-positions = <11 21>;
            layers = <0 2>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <12 22>;
            layers = <0 2>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <13 23>;
            layers = <0 2>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <14 24>;
            layers = <0 2>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <15 25>;
            layers = <0 2>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <16 26>;
            layers = <0 2>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <17 27>;
            layers = <0 2>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <18 28>;
            layers = <0 2>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <19 29>;
            layers = <0 2>;
        };

        SYS {
            bindings = <&mo 5>;
            key-positions = <30 31>;
        };

        SYS_2 {
            bindings = <&mo 5>;
            key-positions = <33 32>;
        };
    };

    macros {
        PS: PS {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N2 &kp N5 &kp N0 &kp N1 &kp N2 &kp N5 &kp LS(E) &kp S &kp T &kp E &kp B &kp A &kp N &kp EXCLAMATION>;
            label = "PS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            bindings = <
&kp Q           &kp W       &kp E        &kp R                         &kp T      &kp Y       &kp U                              &kp I        &kp O       &kp P
&mt LEFT_GUI A  &mt LALT S  &mt LCTRL D  &mt LSHIFT F                  &kp G      &kp H       &mt RSHFT J                        &mt RCTRL K  &mt RALT L  &mt RGUI BSPC
&kp Z           &kp X       &kp C        &kp V                         &kp B      &kp N       &kp M                              &kp COMMA    &kp DOT     &kp FSLH
                                         &mt LC(LA(LEFT_SHIFT)) SPACE  &lt 4 TAB  &lt 3 BSPC  &mt RA(RC(RG(RIGHT_SHIFT))) ENTER
            >;
        };

        QWERTY_NO_MODS {
            bindings = <
&kp Q  &kp W  &kp E  &kp R   &kp T   &kp Y   &kp U   &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F   &kp G   &kp H   &kp J   &kp K      &kp L    &kp BSPC
&kp Z  &kp X  &kp C  &kp V   &kp B   &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH
                     &trans  &trans  &trans  &trans
            >;
        };

        Colemak-DH {
            bindings = <
&kp Q           &kp W       &kp F        &kp P         &kp B   &kp J   &kp L        &kp U        &kp Y       &kp SEMI
&mt LEFT_GUI A  &mt LALT R  &mt LCTRL S  &mt LSHIFT T  &kp G   &kp K   &mt RSHFT N  &mt RCTRL E  &mt RALT I  &mt RGUI O
&kp Z           &kp X       &kp C        &kp D         &kp V   &kp M   &kp H        &kp COMMA    &kp DOT     &kp FSLH
                                         &trans        &trans  &trans  &trans
            >;
        };

        right_layer {
            bindings = <
&kp EXCL  &kp AT  &kp POUND  &kp DOLLAR  &kp PERCENT  &kp CARET  &kp AMPS  &kp ASTRK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp N1    &kp N2  &kp N3     &kp N4      &kp N5       &kp N6     &kp N7    &kp N8     &kp N9                &kp N0
&none     &none   &none      &none       &none        &none      &none     &none      &none                 &none
                             &trans      &mo 5        &trans     &trans
            >;
        };

        left_layer {
            bindings = <
&trans  &trans    &kp UP    &trans     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans    &trans     &trans  &trans  &trans  &trans  &trans  &trans
                            &trans     &trans  &mo 5   &trans
            >;
        };

        tri_layer {
            bindings = <
&sys_reset   &none  &none  &none       &bt BT_SEL 0  &PS    &none  &none  &none  &sys_reset
&bootloader  &none  &none  &none       &bt BT_SEL 1  &none  &to 2  &to 1  &none  &bootloader
&none        &none  &none  &bt BT_CLR  &bt BT_SEL 2  &none  &none  &none  &none  &none
                           &none       &none         &none  &none
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
